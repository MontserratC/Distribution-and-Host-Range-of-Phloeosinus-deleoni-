tick = FALSE, cex = 1.2)
x11()
par(mar = c(0.5, 0.5, 0.5, 0.5))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
x11()
par(mar = c(0.8, 0.8, 0.8, 0.8))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
x11()
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
x11()
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
dev.off()
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
x11()
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
x11()
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
x11()
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
x11()
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19,size=11)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
x11()
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19,size=11)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
x11()
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19,size=11)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19,size=11)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
x11()
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19,size=11)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
x11()
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19,size=11)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19,size=11)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19,size=11)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
x11()
par(mar = c(0.5, 0.5, 0.5, 0.5))
maps::map("world",xlim = c(-155.71493703, -71.631603697), ylim = c(8.071702084, 61.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
par(mar = c(0.5, 0.5, 0.5, 0.5))
maps::map("world",xlim = c(-155.71493703, -71.631603697), ylim = c(8.071702084, 61.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
axis(3, at = -111, labels = "Geographic representation", font = 2,
tick = FALSE, cex = 1.2)
par(mar = c(0.5, 0.5, 0.5, 0.5))
maps::map("world",xlim = c(-155.71493703, -71.631603697), ylim = c(8.071702084, 61.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
x11()
par(mar = c(0.5, 0.5, 0.5, 0.5))
maps::map("world",xlim = c(-155.71493703, -71.631603697), ylim = c(8.071702084, 61.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
x11()
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19,size=11)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
text(x = -115, y = 22, labels = "Richness")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
x11()
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19,size=11)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
#text(x = -115, y = 22, labels = "Richness")
#text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
par(mar = c(1, 1, 1, 1))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols[colfact], pch = 19,size=11)
legend_image <- as.raster(matrix(rev(cols), ncol = 1))
#text(x = -115, y = 22, labels = "Richness")
#text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
x11()
rscly<-par(mar = c(0.5, 0.5, 0.5, 0.5))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols1[colfact1], pch = 19)
legend_image <- as.raster(matrix(rev(cols1), ncol = 1))
text(x = -115, y = 22, labels = "Dispersion field")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
x11()
par(mfrow = c(1, 2))
par(mar = c(4.5, 4.5, 3.5, 0.5))
## original diagram
rdp(presab[, -(1:2)], view = 1, limits = 1)
colsg <- ifelse(iucnCS$S_significance_id == 0, "gray70",
ifelse(iucnCS$S_significance_id == 1, "blue", "red"))
x11()
par(mfrow = c(2, 2), cex = 0.8)
## simple Christen Soberon plot
plot_PAM_CS(iucnCS, main = "Simple range-diversity plot")
library(biosurvey)
library(maps)
library("mapper")
library(viridis)
# ------------------------------------------------------------------------------
library(raster)
colsg <- ifelse(iucnCS$S_significance_id == 0, "gray70",
ifelse(iucnCS$S_significance_id == 1, "blue", "red"))
x11()
par(mfrow = c(2, 2), cex = 0.8)
## simple Christen Soberon plot
plot_PAM_CS(iucnCS, main = "Simple range-diversity plot")
## Christen Soberon plot showing randomized values
plot_PAM_CS(iucnCS, main = "Random expectations in the plot", col_all = NA,
add_random_values = T, ylim = c(0, 0.13), add_legend = F)
## Christen Soberon plot showing significant
plot_PAM_CS(iucnCS, main = "Significant values in the plot", add_significant = T,
col_significant_low = "blue", col_significant_high = "red",
pch_significant_low = 16, pch_significant_high = 16,
ylim = c(0, 0.13), add_legend = F)
## geographic representation
par(mar = c(0.5, 0.5, 0.5, 0.5))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
title(main = "Geographic representation", line = 3.3)
points(presab[, 1:2], col = colsg, pch = 19)
legend("bottomleft", pch = 19, col = c("gray70", "blue", "red"),
legend = c("Non-significant", "Below lower limit", "Above upper limit"),
bty = "n", cex = 0.9, inset = -0.02)
colsg <- ifelse(iucnCS$S_significance_id == 0, "gray70",
ifelse(iucnCS$S_significance_id == 1, "blue", "red"))
x11()
par(mfrow = c(2, 2), cex = 0.8)
## simple Christen Soberon plot
plot_PAM_CS(iucnCS, main = "Simple range-diversity plot")
## Christen Soberon plot showing randomized values
plot_PAM_CS(iucnCS, main = "Random expectations in the plot", col_all = NA,
add_random_values = T, ylim = c(0, 0.13), add_legend = F)
## Christen Soberon plot showing significant
plot_PAM_CS(iucnCS, main = "Significant values in the plot", add_significant = T,
col_significant_low = "blue", col_significant_high = "red",
pch_significant_low = 16, pch_significant_high = 16,
ylim = c(0, 0.13), add_legend = F)
## geographic representation
par(mar = c(0.5, 0.5, 0.5, 0.5))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
title(main = "Geographic representation", line = 3.3)
points(presab[, 1:2], col = colsg, pch = 19)
legend("bottomleft", pch = 19, col = c("gray70", "blue", "red"),
legend = c("Non-significant", "Below lower limit", "Above upper limit"),
bty = "n", cex = 0.9, inset = -0.02)
x11()
par(mfrow = c(2, 2), cex = 0.8)
## simple Christen Soberon plot
plot_PAM_CS(iucnCS, main = "Simple range-diversity plot")
## Christen Soberon plot showing randomized values
plot_PAM_CS(iucnCS, main = "Random expectations in the plot", col_all = NA,
add_random_values = T, ylim = c(0, 0.13), add_legend = F)
## Christen Soberon plot showing significant
plot_PAM_CS(iucnCS, main = "Significant values in the plot", add_significant = T,
col_significant_low = "blue", col_significant_high = "red",
pch_significant_low = 16, pch_significant_high = 16,
ylim = c(0, 0.04), add_legend = F)
x11()
par(mfrow = c(2, 2), cex = 0.8)
## simple Christen Soberon plot
plot_PAM_CS(iucnCS, main = "Simple range-diversity plot")
## Christen Soberon plot showing randomized values
plot_PAM_CS(iucnCS, main = "Random expectations in the plot", col_all = NA,
add_random_values = T, ylim = c(0, 0.13), add_legend = F)
## Christen Soberon plot showing significant
plot_PAM_CS(iucnCS, main = "Significant values in the plot", add_significant = T,
col_significant_low = "blue", col_significant_high = "red",
pch_significant_low = 16, pch_significant_high = 16,
ylim = c(0, 0.01), add_legend = F)
## geographic representation
par(mar = c(0.5, 0.5, 0.5, 0.5))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
title(main = "Geographic representation", line = 3.3)
points(presab[, 1:2], col = colsg, pch = 19)
legend("bottomleft", pch = 19, col = c("gray70", "blue", "red"),
legend = c("Non-significant", "Below lower limit", "Above upper limit"),
bty = "n", cex = 0.9, inset = -0.02)
x11()
par(mfrow = c(2, 2), cex = 0.8)
## simple Christen Soberon plot
plot_PAM_CS(iucnCS, main = "Simple range-diversity plot")
## Christen Soberon plot showing randomized values
plot_PAM_CS(iucnCS, main = "Random expectations in the plot", col_all = NA,
add_random_values = T, ylim = c(0, 0.02), add_legend = F)
## Christen Soberon plot showing significant
plot_PAM_CS(iucnCS, main = "Significant values in the plot", add_significant = T,
col_significant_low = "blue", col_significant_high = "red",
pch_significant_low = 16, pch_significant_high = 16,
ylim = c(0, 0.01), add_legend = F)
x11()
par(mfrow = c(2, 2), cex = 0.8)
## simple Christen Soberon plot
plot_PAM_CS(iucnCS, main = "Simple range-diversity plot")
## Christen Soberon plot showing randomized values
plot_PAM_CS(iucnCS, main = "Random expectations in the plot", col_all = NA,
add_random_values = T, ylim = c(0, 0.005), add_legend = F)
## Christen Soberon plot showing significant
plot_PAM_CS(iucnCS, main = "Significant values in the plot", add_significant = T,
col_significant_low = "blue", col_significant_high = "red",
pch_significant_low = 16, pch_significant_high = 16,
ylim = c(0, 0.01), add_legend = F)
x11()
rscly<-par(mar = c(0.5, 0.5, 0.5, 0.5))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
points(presab[, 1:2], col = cols1[colfact1], pch = 19)
legend_image <- as.raster(matrix(rev(cols1), ncol = 1))
text(x = -115, y = 22, labels = "Dispersion field")
text(x = -113, y = c(16, 20), labels = c("Low", "High"), cex = 0.8)
rasterImage(legend_image, -116, 16, -115, 20)
x11()
par(mfrow = c(2, 2), cex = 0.8)
## simple Christen Soberon plot
plot_PAM_CS(iucnCS, main = "Simple range-diversity plot")
## Christen Soberon plot showing randomized values
plot_PAM_CS(iucnCS, main = "Random expectations in the plot", col_all = NA,
add_random_values = T, ylim = c(0, 0.005), add_legend = F)
## Christen Soberon plot showing significant
plot_PAM_CS(iucnCS, main = "Significant values in the plot", add_significant = T,
col_significant_low = "blue", col_significant_high = "red",
pch_significant_low = 16, pch_significant_high = 16,
ylim = c(0, 0.01), add_legend = F)
## geographic representation
par(mar = c(0.5, 0.5, 0.5, 0.5))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
title(main = "Geographic representation", line = 3.3)
points(presab[, 1:2], col = colsg, pch = 19)
legend("bottomleft", pch = 19, col = c("gray70", "blue", "red"),
legend = c("Non-significant", "Below lower limit", "Above upper limit"),
bty = "n", cex = 0.9, inset = -0.02)
x11()
par(mar = c(0.5, 0.5, 0.5, 0.5))
maps::map("world",xlim = c(-155.71493703, -41.631603697), ylim = c(5.071702084, 71.871702084))
title(main = "Geographic representation", line = 3.3)
points(presab[, 1:2], col = colsg, pch = 19)
legend("bottomleft", pch = 19, col = c("gray70", "blue", "red"),
legend = c("Non-significant", "Below lower limit", "Above upper limit"),
bty = "n", cex = 0.9, inset = -0.02)
# Practica 08 Seleccion de modelos basados en Maxent
# Autores: Luis Osorio Olvera, Rusby G. Contreras Diaz
#          Enrique Martinez Meyer
# Curso: Nichos y areas de distribucion, 2023
library(kuenm)
library(raster)
library(purrr)
library(kuenm)
setwd("C:/Users/NODES/OneDrive/Escritorio/mapasjpg/deleoni-24/deleonikunm")
# Variables with information to be used as arguments. Change "YOUR/DIRECTORY" by your actual directory.
occ_joint <- "deleoni_joint.csv"
occ_tra <- "deleoni_train.csv"
occ_tra <- "deleoni_train.csv"
M_var_dir <- "M_variables"
batch_cal <- "Candidate_models"
out_dir <- "Candidate_Models"
f_clas <- c("l", "lq","lqp") # alternativamente "all"
args <- NULL # e.g., "maximumbackground=20000" for increasing the number of pixels in the bacground or
# note that some arguments are fixed in the function and should not be changed
maxent_path <- "." # path de maxent
wait <- FALSE
run <- TRUE
## ----eval=FALSE----------------------------------------------------------------------------------------
kuenm_cal(occ.joint = occ_joint, occ.tra = occ_tra, M.var.dir = M_var_dir, batch = batch_cal,
out.dir = out_dir, reg.mult = reg_mult, f.clas = f_clas, args = args,
maxent.path = maxent_path, wait = wait, run = run)
M_var_dir <- "M_variables"
batch_cal <- "Candidate_models"
out_dir <- "Candidate_Models"
reg_mult <- c(0.5,1,2)
f_clas <- c("l", "lq","lqp") # alternativamente "all"
args <- NULL # e.g., "maximumbackground=20000" for increasing the number of pixels in the bacground or
# note that some arguments are fixed in the function and should not be changed
maxent_path <- "." # path de maxent
wait <- FALSE
run <- TRUE
## ----eval=FALSE----------------------------------------------------------------------------------------
kuenm_cal(occ.joint = occ_joint, occ.tra = occ_tra, M.var.dir = M_var_dir, batch = batch_cal,
out.dir = out_dir, reg.mult = reg_mult, f.clas = f_clas, args = args,
maxent.path = maxent_path, wait = wait, run = run)
occ_test <- "deleoni_test.csv"
out_eval <- "Calibration_results"
threshold <- 5
rand_percent <- 50
iterations <- 100
kept <- TRUE
selection <- "OR_AICc"
paral_proc <- TRUE
cal_eval <- kuenm_ceval(path = out_dir, occ.joint = occ_joint, occ.tra = occ_tra,
occ.test = occ_test, batch = batch_cal,
out.eval = out_eval, threshold = threshold,
rand.percent = rand_percent, iterations = iterations,
kept = kept, selection = selection,
parallel.proc = paral_proc)
# Practica 08 Seleccion de modelos basados en Maxent
# Autores: Luis Osorio Olvera, Rusby G. Contreras Diaz
#          Enrique Martinez Meyer
# Curso: Nichos y areas de distribucion, 2023
library(kuenm)
library(raster)
library(purrr)
occ_joint <- "deleoni_joint.csv"
occ_tra <- "deleoni_train.csv"
M_var_dir <- "M_variables"
batch_cal <- "Candidate_models"
out_dir <- "Candidate_Models"
reg_mult <- c(0.5,1,2)
f_clas <- c("l", "lq") # alternativamente "all"
args <- NULL # e.g., "maximumbackground=20000" for increasing the number of pixels in the bacground or
# note that some arguments are fixed in the function and should not be changed
maxent_path <- "." # path de maxent
wait <- FALSE
run <- TRUE
kuenm_cal(occ.joint = occ_joint, occ.tra = occ_tra, M.var.dir = M_var_dir, batch = batch_cal,
out.dir = out_dir, reg.mult = reg_mult, f.clas = f_clas, args = args,
maxent.path = maxent_path, wait = wait, run = run)
occ_joint <- "deleoni_joint.csv"
occ_tra <- "deleoni_train.csv"
M_var_dir <- "M_variables"
batch_cal <- "Candidate_models"
out_dir <- "Candidate_Models"
reg_mult <- c(0.5,1,2)
f_clas <- c("l", "lq") # alternativamente "all"
args <- NULL # e.g., "maximumbackground=20000" for increasing the number of pixels in the bacground or
# note that some arguments are fixed in the function and should not be changed
maxent_path <- "." # path de maxent
wait <- FALSE
run <- TRUE
kuenm_cal(occ.joint = occ_joint, occ.tra = occ_tra, M.var.dir = M_var_dir, batch = batch_cal,
out.dir = out_dir, reg.mult = reg_mult, f.clas = f_clas, args = args,
maxent.path = maxent_path, wait = wait, run = run)
occ_test <- "deleoni_test.csv"
out_eval <- "Calibration_results"
threshold <- 5
rand_percent <- 50
iterations <- 100
kept <- TRUE
selection <- "OR_AICc"
paral_proc <- TRUE
cal_eval <- kuenm_ceval(path = out_dir, occ.joint = occ_joint, occ.tra = occ_tra,
occ.test = occ_test, batch = batch_cal,
out.eval = out_eval, threshold = threshold,
rand.percent = rand_percent, iterations = iterations,
kept = kept, selection = selection,
parallel.proc = paral_proc)
batch_fin <- "Final_models"
mod_dir <- "Final_Models"
rep_n <- 2
rep_type <- "Bootstrap"
jackknife<-TRUE
out_format <- "cloglog"
project <- FALSE
max.memory<-1000
G_var_dir <- FALSE
ext_type <- "no_ext" # para extrapolacion "all"
write_mess <- FALSE
write_clamp <- FALSE
wait1 <- FALSE
run1 <- TRUE
args <- NULL
help(kuenm_mod)
kuenm_mod(occ.joint = occ_joint, M.var.dir = M_var_dir,
out.eval = out_eval, batch = batch_fin, rep.n = rep_n,
rep.type = rep_type, jackknife = jackknife,
out.dir = mod_dir, out.format = out_format, project = project,
G.var.dir =G_var_dir, ext.type = ext_type,
write.mess = write_mess, write.clamp = write_clamp,
maxent.path = maxent_path, args = args, wait = wait1, run = run1)
